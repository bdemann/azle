name: Benchmark
on:
    workflow_dispatch:
        inputs:
            exclude-slow-benchmarks:
                description: 'Exclude slow benchmarks'
                required: true
                type: boolean
                default: false
            exclude-unstable-benchmarks:
                description: 'Exclude unstable benchmarks'
                required: true
                type: boolean
                default: false
            exclude-release-benchmarks:
                description: 'Exclude release benchmarks'
                required: true
                type: boolean
                default: false

jobs:
    get-exclude-dirs:
        name: Get exclude directories
        runs-on: ubuntu-latest
        outputs:
            exclude-dirs: ${{ steps.get-exclude-dirs.outputs.exclude-dirs }}
        steps:
            - uses: actions/checkout@v4

            - id: get-exclude-dirs
              uses: ./.github/actions/get_exclude_dirs
              with:
                  exclude-slow: ${{ github.event.inputs.exclude-slow-benchmarks == true }}
                  exclude-unstable: ${{ github.event.inputs.exclude-unstable-benchmarks == true }}
                  exclude-release-only: ${{ github.event.inputs.exclude-release-benchmarks == true }}

    create-branch-prefix:
        name: Create Branch Prefix
        runs-on: ubuntu-latest
        outputs:
            branch-prefix: ${{ steps.create-prefix.outputs.branch-prefix }}
        steps:
            - uses: actions/checkout@v4

            - id: create-prefix
              run: |
                  VERSION=$(jq -r '.version' package.json)
                  echo "branch-prefix=benchmark--$VERSION-" >> $GITHUB_OUTPUT

    run-benchmarks:
        name: ${{ matrix.benchmark_group.name }}
        needs:
            - get-exclude-dirs
            - create-branch-prefix
        strategy:
            fail-fast: false
            matrix:
                benchmark_group:
                    - { name: 'Examples', directories: './examples' }
                    - {
                          name: 'E2E Class',
                          directories: './tests/end_to_end/candid_rpc/class_syntax'
                      }
                    - {
                          name: 'E2E Functional',
                          directories: './tests/end_to_end/candid_rpc/functional_syntax'
                      }
                    - {
                          name: 'E2E HTTP Server',
                          directories: './tests/end_to_end/http_server'
                      }
                    - {
                          name: 'Property Class',
                          directories: './tests/property/candid_rpc/class_api'
                      }
                    - {
                          name: 'Property Functional',
                          directories: './tests/property/candid_rpc/functional_api'
                      }
                    - {
                          name: 'Property IC API',
                          directories: './tests/property/ic_api'
                      }
        uses: ./.github/workflows/benchmark_parallel.yml
        secrets:
            GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            LASTMJS_GITHUB_TOKEN: ${{ secrets.LASTMJS_GITHUB_TOKEN }}
        with:
            directories: ${{ matrix.benchmark_group.directories }}
            exclude-dirs: ${{ needs.get-exclude-dirs.outputs.exclude-dirs }}
            branch-prefix: ${{ needs.create-branch-prefix.outputs.branch-prefix }}

    finalize-benchmark:
        needs: [run-benchmarks, create-branch-prefix]
        uses: ./.github/workflows/finalize_changes.yml
        with:
            branch-prefix: ${{ needs.create-branch-prefix.outputs.branch-prefix }}
            commit-message: 'run benchmarks'
        secrets:
            GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            LASTMJS_GITHUB_TOKEN: ${{ secrets.LASTMJS_GITHUB_TOKEN }}
